var searchIndex = new Map(JSON.parse('[\
["islet_sdk",{"t":"CCCCCCCCHPPPPPPNNNNHHHHGHHNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSHPPPGPPPPPPNNNNNNNNNPPGEPEPENNENNNNHHENNNEEFNNONNNNNNNNOSHHH","n":["attester","c_api","config","error","prelude","report","sealing","verifier","attest","ISLET_ERROR_FEATURE_NOT_SUPPORTED","ISLET_ERROR_INPUT","ISLET_ERROR_WRONG_CLAIMS","ISLET_ERROR_WRONG_REPORT","ISLET_FAILURE","ISLET_SUCCESS","borrow","borrow_mut","from","into","islet_attest","islet_parse","islet_print_claims","islet_seal","islet_status_t","islet_unseal","islet_verify","try_from","try_into","type_id","CLAIM_COUNT_PLATFORM_TOKEN","CLAIM_COUNT_REALM_TOKEN","CLAIM_COUNT_SW_COMPONENT","STR_PLAT_CHALLENGE","STR_PLAT_CONFIGURATION","STR_PLAT_HASH_ALGO_ID","STR_PLAT_IMPLEMENTATION_ID","STR_PLAT_INSTANCE_ID","STR_PLAT_PROFILE","STR_PLAT_SECURITY_LIFECYCLE","STR_PLAT_SIGNATURE","STR_PLAT_SW_COMPONENTS","STR_PLAT_VERIFICATION_SERVICE","STR_REALM_CHALLENGE","STR_REALM_EXTENTIBLE_MEASUREMENTS","STR_REALM_HASH_ALGO_ID","STR_REALM_INITIAL_MEASUREMENT","STR_REALM_PERSONALIZATION_VALUE","STR_REALM_PUB_KEY","STR_REALM_PUB_KEY_HASH_ALGO_ID","STR_REALM_SIGNATURE","STR_USER_DATA","TAG_CCA_TOKEN","TAG_COSE_SIGN1","TAG_PLAT_CHALLENGE","TAG_PLAT_CONFIGURATION","TAG_PLAT_HASH_ALGO_ID","TAG_PLAT_IMPLEMENTATION_ID","TAG_PLAT_INSTANCE_ID","TAG_PLAT_PROFILE","TAG_PLAT_SECURITY_LIFECYCLE","TAG_PLAT_SW_COMPONENTS","TAG_PLAT_VERIFICATION_SERVICE","TAG_REALM_CHALLENGE","TAG_REALM_EXTENTIBLE_MEASUREMENTS","TAG_REALM_HASH_ALGO_ID","TAG_REALM_INITIAL_MEASUREMENT","TAG_REALM_PERSONALIZATION_VALUE","TAG_REALM_PUB_KEY","TAG_REALM_PUB_KEY_HASH_ALGO_ID","TAG_UNASSIGINED","TOKEN_COUNT","TOKEN_PLAT","TOKEN_REALM","to_label","CCAToken","Claims","Decoding","Error","InvalidArgument","NotSupported","Report","Sealing","SealingKey","Serialize","borrow","borrow_mut","fmt","from","from","into","try_from","try_into","type_id","Bool","Bstr","ClaimData","Error","Int64","Report","Text","attest","borrow","borrow_mut","config","default","fmt","from","into","parse","print_claims","seal","try_from","try_into","type_id","unseal","verify","Report","borrow","borrow_mut","buffer","deserialize","fmt","from","into","serialize","try_from","try_into","type_id","user_data","DEBUG_KEY","seal","unseal","verify"],"q":[[0,"islet_sdk"],[8,"islet_sdk::attester"],[9,"islet_sdk::c_api"],[29,"islet_sdk::config"],[74,"islet_sdk::error"],[93,"islet_sdk::prelude"],[116,"islet_sdk::report"],[129,"islet_sdk::sealing"],[132,"islet_sdk::verifier"],[133,"core::result"],[134,"core::ffi"],[135,"core::any"],[136,"core::fmt"],[137,"cca_token"],[138,"core::option"],[139,"serde::de"],[140,"serde::ser"],[141,"alloc::vec"],[142,"islet_sdk::parser"]],"i":[0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,17,17,0,0,17,0,17,0,17,17,0,17,17,17,17,0,0,0,17,17,17,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0],"f":"````````{{{d{b}}}{{j{fh}}}}``````{ce{}{}}0{cc{}}1{{lnln}A`}{{Ablnln}A`}{{ln}Ad}2`22{c{{j{e}}}{}{}}0{cAf{}}````````````````````````````````````````````{AhAj}``````````77{{hAl}An}7{B`h}9443````````99`{{}Bb}{{BbAl}{{j{AdBd}}}}:;{{BfAh}{{Bh{Bb}}}}{BfAd}`887```==`{c{{j{f}}}Bj}{{fAl}An}>?{{fc}jBl};;:``{{{d{b}}}{{j{{Bn{b}}h}}}}0{f{{j{BfB`}}}}","D":"An","p":[[1,"u8"],[1,"slice"],[5,"Report",116],[6,"Error",74],[6,"Result",133],[8,"c_uchar",134],[8,"c_int",134],[6,"islet_status_t",9],[8,"c_char",134],[1,"unit"],[5,"TypeId",135],[1,"str"],[1,"u16"],[5,"Formatter",136],[8,"Result",136],[6,"TokenError",137],[6,"ClaimData",93,137],[5,"Error",136],[5,"AttestationClaims",137],[6,"Option",138],[10,"Deserializer",139],[10,"Serializer",140],[5,"Vec",141]],"r":[[95,137],[96,74],[98,116],[100,8],[103,0],[108,142],[109,142],[110,129],[114,129],[115,132]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHYACAAAAAIABAANABgAAAAbADwAWQAAAFsADwBtAA0AfQAIAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
