var searchIndex = JSON.parse('{\
"islet_rmm":{"doc":"","t":"AAAOOOAOOOAAAOOAAAAOAAAAOAOOAAFAAFFFRFFRRRRRRRRRRRRFFNDENNNLLLLLLLLLLLLLLLLLLLLLLGGDCCGCLLLLLLLLLLLLLALALLCCALLLLGDLLLLLLLLMMLLLLNENNNNNENNNNLLLLLLLLLLLLLLLLLLLLGSSSDLLLLLLLMLLLAAHAAFNNNDNENNRRNENLLLLLLLLLLLLLLLLLLFFLLLALLLLLLLLLLLLNNNNNENNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDDRRLLLLLLLFLLMMMMFFFFLLLLLLASSRRRDRDDSSSSSLLLLLLLLLMALLLLLFMLLLFFLLFLLLLLLLLLLFDDLLLLLLLLLLLLLLLLLLLLDLLLLLFFLLLLLLLLLIICCGDILLLLKKLLFLLLKLFAAAELLLLLLLLLLEEEEALLLLLLLLALLLLLLLLLLLLLLLLLLLLAAAARRRRRRRRRRSSSSSDSSDSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRRDLLLFLLLLLLLFFFAAAAAADLLLLLLFLLLLDDDDMMMMLLLLLLLLMMMMMMMMMMMLLLLMMMMLLLLMLLLLLFMMMMMMMMMLLLLLMLMMFMMMMMMMMMLLLLLLLLMMLLLLMMMIAKKKKKAAAAADDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEEELLLLLLLLALLLLLLLLALLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLAAAARRRRRRRRRRRRRRRRSSRDDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLRRSSSSSSSSSSRSSSDDSSLLLLLLLLLLALLLLLLLLLLLLLAALLLLLLLLLLLLLLLLLLLLLRRRRRRRRRSSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLHFFFFFNNNEDLLLLLLMFFLLLLLLLLLLLMFMLLLLLLLRRRRRRRSRRRRRRRRRRRRRRRRRDRSRRRRRRRRRRRRRRRRRRRRRRRLLAAALLLALLLAAAALFLLLADMLLLLMLLLLMLLLLFEENNNNNNNNNNNLLLLLLLLLLLLLLLLLLLFFFRRFDLLLLLLLLLLLLMLLLLFLLLLLLMNNDELLLLLLLLLALLLLLALLLLLLALALLLLAFFLLLCLLLLLLLLLLLLALFFSSSSDLLLLLLLLLLLLLLLLLLLLLLFDMLLLLLMLLMLLMMMLLLLLLRRRRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFRRRFFFFRRRRRFRRRRRRRRRRRRRRAAFAAAAFFDLLALLLLFLLLLLRGDDRRGRDRRRGGRGGDLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLFENNNLLLLLLLLRDLLLLLLLLLLLLFFSSSSSSSSRDDRRSSLLLLLLLLFLLLLLLFFFFFFFFFFF","n":["allocator","asm","config","const_assert","const_assert_eq","const_assert_size","cpu","define_interface","eprint","eprintln","error","event","exception","get_granule","get_granule_if","gic","granule","host","io","listen","logger","macro","mm","mmio","offset_of","panic","print","println","realm","rmi","rmm_exit","rsi","rtt","start","get_used_size","init","SMC_SUCCESS","dcache_flush","smc","HUGE_PAGE_SIZE","LARGE_PAGE_SIZE","NUM_OF_CLUSTER","NUM_OF_CPU","NUM_OF_CPU_PER_CLUSTER","PAGE_BITS","PAGE_SIZE","RMM_HEAP_SIZE","RMM_SHARED_BUFFER_START","RMM_STACK_SIZE","STACK_ALIGN","VM_STACK_SIZE","get_cpu_id","id","AlreadyExists","Error","ErrorKind","NotConnected","Other","Unsupported","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","fmt","fmt","from","from","into","into","kind","new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Argument","Command","Context","Error","Mainloop","Return","RsiHandle","arg_slice","borrow","borrow_mut","clone","clone_into","cmd","default","do_rmi","do_rsi","from","init_arg","init_ret","into","mainloop","new","realmexit","resize_ret","ret_slice","rmi","rsi","rsihandle","to_owned","try_from","try_into","type_id","Handler","Mainloop","add_event_handler","boot_complete","borrow","borrow_mut","dispatch","from","into","new","on_event","queue","run","try_from","try_into","type_id","DataAbort","ExitSyncType","FIQ","IRQ","InstAbort","PSCI","RSI","RecExitReason","SError","Sync","Undefined","Undefined","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","into","into","into","into","try_from","try_from","try_into","try_into","type_id","type_id","Handler","NOT_SUPPORTED","RET_FAIL","RET_SUCCESS","RsiHandle","add_event_handler","borrow","borrow_mut","dispatch","from","into","new","on_event","try_from","try_into","type_id","lower","trap","vectors","synchronous","sys_reg","handle","CurrentSPEL0","CurrentSPELx","Fiq","Info","Irq","Kind","LowerAArch32","LowerAArch64","RET_TO_REC","RET_TO_RMM","SError","Source","Synchronous","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","fmt","fmt","fmt","from","from","from","handle_exception","handle_lower_exception","into","into","into","syndrome","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","AccessFlag","AddressSize","Alignment","Brk","DataAbort","Fault","HVC","InstructionAbort","Other","Other","PCAlignmentFault","Permission","SMC","SPAlignmentFault","Syndrome","SysRegInst","TLBConflict","Translation","Unknown","WFX","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","from","from","from","from","into","into","into","into","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","level","level","level","level","GIC_FEATURES","GicFeatures","ICH_HCR_EL2_EOI_COUNT_MASK","ICH_HCR_EL2_NS_MASK","borrow","borrow","borrow_mut","borrow_mut","deref","from","from","init_gic","into","into","max_vintid","nr_aprs","nr_lrs","pri_res0_mask","receive_state_from_host","restore_state","save_state","send_state_to_host","try_from","try_from","try_into","try_into","type_id","type_id","array","Data","Delegated","GRANULE_MASK","GRANULE_SHIFT","GRANULE_SIZE","GRANULE_STATUS_TABLE","GRANULE_STATUS_TABLE_SIZE","GranuleState","GranuleStatusTable","RD","RTT","Rec","RecAux","Undelegated","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","entries","entry","eq","fmt","from","from","from","granule_addr_to_index","inner","into","into","into","is_granule_aligned","is_not_in_realm","new","new","set_granule","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_addr","Entry","Granule","borrow","borrow","borrow_mut","borrow_mut","content","content_mut","from","from","into","into","lock","new","set_state","state","try_from","try_from","try_into","try_into","type_id","type_id","DataPage","as_slice","borrow","borrow_mut","clone","clone_into","copy_from","copy_to","default","from","into","is_initialized","to_owned","try_from","try_into","type_id","verify_ownership","ConsoleWriter","Device","Error","ErrorKind","Result","Stdout","Write","attach","borrow","borrow_mut","from","initialize","initialized","into","new","stdout","try_from","try_into","type_id","write_all","write_all","register_global_logger","page","page_table","translation","BasePageSize","borrow","borrow_mut","clone","clone_into","from","into","to_owned","try_from","try_into","type_id","L0Table","L1Table","L2Table","L3Table","attr","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","entry","from","from","from","from","into","into","into","into","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","mair_idx","page_type","permission","shareable","DEVICE_MEM","RMM_MEM","RW_DATA","BLOCK","TABLE_OR_PAGE","RO","RW","INNER","NONE","OUTER","ADDR_BLK_L1","ADDR_BLK_L2","ADDR_TBL_OR_PAGE","AF","AP","Entry","INDX","NS","PTDesc","PXN","Reserved","SH","TYPE","UXN","VALID","address","borrow","borrow","borrow_mut","borrow_mut","clear","clear_bits","clone","clone","clone_into","clone_into","from","from","get","get_masked","get_masked_value","get_mut","index","into","into","is_valid","mut_pte","new","new","points_to_table_or_page","pte","set","set","set_bits","set_masked","set_masked_value","set_with_page_table_flags","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ALIGN_ROOT_PAGE","NUM_ROOT_PAGE","PageTable","borrow","borrow_mut","from","get_page_table","get_ref","into","map","try_from","try_into","type_id","unmap","emulate_mmio","halt","panic_handler","config","context","mm","registry","timer","vcpu","RealmConfig","borrow","borrow_mut","from","init","into","is_initialized","realm_config","try_from","try_into","type_id","verify_ownership","Context","GICRegister","SystemRegister","TimerRegister","actlr","afsr0","afsr1","amair","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cnthctl_el2","cntkctl","cntp_ctl_el0","cntp_cval_el0","cntpoff_el2","cntv_ctl_el0","cntv_cval_el0","cntvoff_el2","contextidr","cpacr","csselr","default","default","default","default","elr","esr_el1","esr_el2","far","fmt","fmt","fmt","fmt","fp_regs","from","from","from","from","from_current","get_reg","gic_state","gp_regs","hpfar","ich_ap0r_el2","ich_ap1r_el2","ich_hcr_el2","ich_lr_el2","ich_misr_el2","ich_vmcr_el2","into","into","into","into","into_current","mair","new","par","sctlr","set_reg","sp","sp_el0","spsr","sys_regs","tcr","timer","tpidr","tpidr_el0","tpidrro","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttbr0","ttbr1","type_id","type_id","type_id","type_id","vbar","vmpidr","vttbr","IPATranslation","address","clean","get_base_address","ipa_to_pa","ipa_to_pte","ipa_to_pte_set","page","page_table","stage2_translation","stage2_tte","translation_granule_4k","GuestPhysAddr","PhysAddr","add","add","add_assign","add_assign","as_u64","as_u64","as_usize","as_usize","bitand","bitand","bitor","bitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","partial_cmp","partial_cmp","sub","sub","sub_assign","sub_assign","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","zero","zero","BasePageSize","HugePageSize","LargePageSize","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","from","from","from","into","into","into","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","L0Table","L1Table","L2Table","L3Table","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","entry","from","from","from","from","into","into","into","into","pte","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Entry","address","borrow","borrow_mut","clear","clone","clone_into","from","index","into","is_valid","mut_pte","new","points_to_table_or_page","pte","set","set_with_page_table_flags","to_owned","try_from","try_into","type_id","attribute","page_type","permission","shareable","DEVICE_NGNRE","FWB_RESERVED","NORMAL","NORMAL_FWB","NORMAL_NC","BLOCK","TABLE_OR_PAGE","NONE","RO","RW","WO","INNER","NON_SHAREABLE","OUTER","RESERVED","ALIGN_ROOT_PAGE","IPA","NS","NUM_ROOT_PAGE","Stage2Translation","TLBI_OP","TTL","alloc","alloc_zeroed","borrow","borrow","borrow_mut","borrow_mut","clean","clear_bits","clone","clone_into","dealloc","fmt","from","from","get","get_base_address","get_masked","get_masked_value","get_mut","into","into","ipa_to_pa","ipa_to_pte","ipa_to_pte_set","new","new","set","set_bits","set_masked","set_masked_value","tlbi_ns","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","IPAS_NS","IPAS_S","ADDR_FULL","ADDR_L0_PAGE","ADDR_L1_PAGE","ADDR_L2_PAGE","ADDR_L3_PAGE","AF","AP","DESC_TYPE","INVALID_HIPAS","INVALID_RIPAS","INVALID_UNPROTECTED","MEMATTR","NS","PAGE_FLAGS","RttPage","S2TTE","SH","XN","address","borrow","borrow","borrow_mut","borrow_mut","clear_bits","clone","clone","clone_into","clone_into","desc_type","from","from","from","get","get","get_masked","get_masked_value","get_mut","get_mut","get_ripas","get_s2tte","into","into","invalid_hipas","invalid_ripas","is_assigned","is_destroyed","is_host_ns_valid","is_invalid_ripas","is_table","is_unassigned","is_valid","len","new","set","set_bits","set_masked","set_masked_value","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","L012_BLOCK","L012_TABLE","L3_PAGE","LX_INVALID","ASSIGNED","DESTROYED","UNASSIGNED","EMPTY","RAM","ADDR_BLK_L1","ADDR_BLK_L2","ADDR_TBL_OR_PAGE","AF","ATTR","CONT","NS","RawPTE","S2AP","SH","TYPE","VALID","XN","borrow","borrow_mut","clear_bits","clone","clone_into","from","get","get_masked","get_masked_value","get_mut","into","new","set","set_bits","set_masked","set_masked_value","to_owned","try_from","try_into","type_id","VMID_SET","init_timer","restore_state","save_state","send_state_to_host","set_cnthctl","Null","Ready","Running","State","VCPU","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","context","create_vcpu","current","drop","fmt","fmt","from","from","from_current","into","into","into_current","is_realm_dead","new","pcpu","remove","state","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ABI_MAJOR_VERSION","ABI_MINOR_VERSION","BOOT_COMPLETE","BOOT_SUCCESS","DATA_CREATE","DATA_CREATE_UNKNOWN","DATA_DESTROY","DEVICE","ERROR_INPUT","ERROR_REC","EXIT_FIQ","EXIT_HOST_CALL","EXIT_IRQ","EXIT_PSCI","EXIT_RIPAS_CHANGE","EXIT_SERROR","EXIT_SYNC","FEATURES","GET_PLAT_TOKEN","GET_REALM_ATTEST_KEY","GRANULE_DELEGATE","GRANULE_UNDELEGATE","HASH_ALGO_SHA256","HASH_ALGO_SHA512","MAX_REC_AUX_GRANULES","MapProt","NOT_SUPPORTED_YET","NS_PAS","REALM_ACTIVATE","REALM_CREATE","REALM_DESTROY","REC_AUX_COUNT","REC_CREATE","REC_DESTROY","REC_ENTER","REQ_COMPLETE","RET_EXCEPTION_IL","RET_EXCEPTION_IRQ","RET_EXCEPTION_SERROR","RET_EXCEPTION_TRAP","RET_FAIL","RTT_CREATE","RTT_DESTROY","RTT_INIT_RIPAS","RTT_MAP_UNPROTECTED","RTT_READ_ENTRY","RTT_SET_RIPAS","RTT_UNMAP_UNPROTECTED","SUCCESS","SUCCESS_REC_ENTER","VERSION","borrow","borrow_mut","constraint","error","features","from","from","get","gpt","into","is_set","new","realm","rec","rtt","rtt_entry_state","set_bit","to_str","try_from","try_into","type_id","version","Constraint","arg_num","borrow","borrow_mut","clone","clone_into","cmd","default","from","into","new","ret_num","to_owned","try_from","try_into","type_id","validate","Error","InternalError","InvalidMeasurementIndex","MeasurementError","NotExistRealm","NotExistVCPU","RmiErrorCount","RmiErrorInUse","RmiErrorInput","RmiErrorOthers","RmiErrorRealm","RmiErrorRec","RmiErrorRtt","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","from","into","into","try_from","try_from","try_into","try_into","type_id","type_id","ipa_bits","set_event_handler","validate","MARK_NONSECURE","MARK_REALM","set_event_handler","Rd","addr_in_par","at_state","borrow","borrow_mut","fmt","from","hash_algo","id","inc_rec_index","init","into","ipa_bits","measurements","rec_index","rtt_base","s2_starting_level","s2_table","set_event_handler","set_hash_algo","set_state","state","try_from","try_into","type_id","vcpus","AttestInProgress","NoAttestInProgress","Rec","RmmRecAttestState","attest_challenge","attest_state","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","exit","fmt","fmt","from","from","get_state","handlers","host_call_pending","inc_ripas_addr","init","into","into","ipa_bits","mpidr","owner","params","realmid","ripas_addr","ripas_end","ripas_state","run","run","run_prepare","runnable","set_attest_challenge","set_attest_state","set_event_handler","set_host_call_pending","set_ripas","set_state","set_vtcr","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vcpuid","vtcr","vtcr","handle_realm_exit","set_event_handler","AFF0","AFF1","AFF2","AFF3","MPIDR","borrow","borrow_mut","clear_bits","clone","clone_into","from","from","get","get_masked","get_masked_value","get_mut","index","into","new","set","set_bits","set_masked","set_masked_value","to_owned","try_from","try_into","type_id","validate","Params","aux","borrow","borrow_mut","clone","clone_into","default","flags","fmt","from","gprs","into","is_initialized","mpidr","num_aux","pc","to_owned","try_from","try_into","type_id","verify_compliance","verify_ownership","NR_GPRS","REC_ENTRY_FLAG_EMUL_MMIO","REC_ENTRY_FLAG_INJECT_SEA","REC_ENTRY_FLAG_TRAP_WFE","REC_ENTRY_FLAG_TRAP_WFI","Run","borrow","borrow_mut","clone","clone_into","default","entry_flags","entry_gic_hcr","entry_gic_lrs","entry_gpr","exit_gic_lrs_mut","fmt","from","into","is_initialized","set_cntp_ctl","set_cntp_cval","set_cntv_ctl","set_cntv_cval","set_esr","set_exit_reason","set_far","set_gic_hcr","set_gic_lrs","set_gic_misr","set_gic_vmcr","set_gpr","set_hpfar","set_imm","set_ripas","to_owned","try_from","try_into","type_id","verify_compliance","verify_ownership","activate_stage2_mmu","prepare_vtcr","RTT_MIN_BLOCK_LEVEL","RTT_PAGE_LEVEL","S2TTE_STRIDE","is_protected_ipa","realm_par_size","set_event_handler","validate_ipa","RMI_ASSIGNED","RMI_DESTROYED","RMI_TABLE","RMI_UNASSIGNED","RMI_VALID_NS","set_event_handler","ABI_VERSION","ATTEST_TOKEN_CONTINUE","ATTEST_TOKEN_INIT","ERROR_INPUT","ERROR_STATE","HOST_CALL","INCOMPLETE","IPA_STATE_GET","IPA_STATE_SET","MEASUREMENT_EXTEND","MEASUREMENT_READ","REALM_CONFIG","SUCCESS","VERSION","attestation","constraint","do_host_call","error","hostcall","measurement","psci","set_event_handler","to_str","Attestation","borrow","borrow_mut","claims","create_attestation_token","default","fmt","from","get_token","into","new","try_from","try_into","type_id","CHALLENGE_LABEL","Challenge","Claim","Data","EXTENSIBLE_MEASUREMENTS_LABEL","HASH_ALGO_ID_LABEL","HashAlgo","INITIAL_MEASUREMENT_LABEL","MeasurementEntry","PERSONALIZATION_VALUE_LABEL","PUBLIC_KEY_HASH_ALOG_ID_LABEL","PUBLIC_KEY_LABEL","PersonalizationValue","RAKPubKey","REM_SLOT_NR","REMs","RIM","RealmClaims","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","challenge","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","fmt","fmt","fmt","fmt","from","from","from","from","from_slice","init","into","into","into","into","measurement_hash_algo","personalization_value","rak_pub","rak_pub_hash_algo","rems","rim","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","Error","InvalidMeasurementIndex","MeasurementError","RealmDoesNotExists","borrow","borrow_mut","fmt","from","into","try_from","try_into","type_id","HOST_CALL_NR_GPRS","HostCall","borrow","borrow_mut","fmt","from","imm","into","is_initialized","set_gpr","try_from","try_into","type_id","verify_ownership","extend","read","AFFINITY_INFO","AFFINITY_INFO","CPU_OFF","CPU_ON","CPU_ON","CPU_SUSPEND","CPU_SUSPEND","FEATURES","PSCI_VERSION","SMC32","SMC64","SMCCC_ARCH_FEATURES","SMCCC_VERSION","SYSTEM_OFF","SYSTEM_RESET","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","set_event_handler","try_from","try_from","try_into","try_into","type_id","type_id","create","data_create","data_destroy","destroy","get_ripas","init_ripas","make_exclusive","make_shared","map_unprotected","read_entry","unmap_unprotected"],"q":[[0,"islet_rmm"],[34,"islet_rmm::allocator"],[36,"islet_rmm::asm"],[39,"islet_rmm::config"],[51,"islet_rmm::cpu"],[53,"islet_rmm::error"],[81,"islet_rmm::event"],[113,"islet_rmm::event::mainloop"],[129,"islet_rmm::event::realmexit"],[161,"islet_rmm::event::rsihandle"],[177,"islet_rmm::exception"],[180,"islet_rmm::exception::lower"],[181,"islet_rmm::exception::lower::synchronous"],[182,"islet_rmm::exception::lower::synchronous::sys_reg"],[183,"islet_rmm::exception::trap"],[232,"islet_rmm::exception::trap::syndrome"],[278,"islet_rmm::exception::trap::syndrome::Fault"],[282,"islet_rmm::gic"],[310,"islet_rmm::granule"],[311,"islet_rmm::granule::array"],[362,"islet_rmm::granule::array::entry"],[384,"islet_rmm::host"],[401,"islet_rmm::io"],[422,"islet_rmm::logger"],[423,"islet_rmm::mm"],[426,"islet_rmm::mm::page"],[437,"islet_rmm::mm::page_table"],[471,"islet_rmm::mm::page_table::attr"],[475,"islet_rmm::mm::page_table::attr::mair_idx"],[478,"islet_rmm::mm::page_table::attr::page_type"],[480,"islet_rmm::mm::page_table::attr::permission"],[482,"islet_rmm::mm::page_table::attr::shareable"],[485,"islet_rmm::mm::page_table::entry"],[540,"islet_rmm::mm::translation"],[554,"islet_rmm::mmio"],[555,"islet_rmm::panic"],[557,"islet_rmm::realm"],[563,"islet_rmm::realm::config"],[575,"islet_rmm::realm::context"],[666,"islet_rmm::realm::mm"],[678,"islet_rmm::realm::mm::address"],[738,"islet_rmm::realm::mm::page"],[771,"islet_rmm::realm::mm::page_table"],[805,"islet_rmm::realm::mm::page_table::entry"],[826,"islet_rmm::realm::mm::page_table::pte"],[830,"islet_rmm::realm::mm::page_table::pte::attribute"],[835,"islet_rmm::realm::mm::page_table::pte::page_type"],[837,"islet_rmm::realm::mm::page_table::pte::permission"],[841,"islet_rmm::realm::mm::page_table::pte::shareable"],[845,"islet_rmm::realm::mm::stage2_translation"],[890,"islet_rmm::realm::mm::stage2_translation::tlbi_ns"],[892,"islet_rmm::realm::mm::stage2_tte"],[957,"islet_rmm::realm::mm::stage2_tte::desc_type"],[961,"islet_rmm::realm::mm::stage2_tte::invalid_hipas"],[964,"islet_rmm::realm::mm::stage2_tte::invalid_ripas"],[966,"islet_rmm::realm::mm::translation_granule_4k"],[999,"islet_rmm::realm::registry"],[1000,"islet_rmm::realm::timer"],[1005,"islet_rmm::realm::vcpu"],[1040,"islet_rmm::rmi"],[1113,"islet_rmm::rmi::constraint"],[1130,"islet_rmm::rmi::error"],[1162,"islet_rmm::rmi::features"],[1165,"islet_rmm::rmi::gpt"],[1168,"islet_rmm::rmi::realm"],[1194,"islet_rmm::rmi::rec"],[1248,"islet_rmm::rmi::rec::exit"],[1249,"islet_rmm::rmi::rec::handlers"],[1250,"islet_rmm::rmi::rec::mpidr"],[1278,"islet_rmm::rmi::rec::params"],[1300,"islet_rmm::rmi::rec::run"],[1341,"islet_rmm::rmi::rec::vtcr"],[1343,"islet_rmm::rmi::rtt"],[1350,"islet_rmm::rmi::rtt_entry_state"],[1355,"islet_rmm::rmi::version"],[1356,"islet_rmm::rsi"],[1379,"islet_rmm::rsi::attestation"],[1393,"islet_rmm::rsi::attestation::claims"],[1465,"islet_rmm::rsi::constraint"],[1466,"islet_rmm::rsi::error"],[1478,"islet_rmm::rsi::hostcall"],[1492,"islet_rmm::rsi::measurement"],[1494,"islet_rmm::rsi::psci"],[1524,"islet_rmm::rtt"],[1535,"core::fmt"],[1536,"core::fmt"],[1537,"core::any"],[1538,"core::ops::function"],[1539,"core::ops::function"],[1540,"spinning_top::spinlock"],[1541,"safe_abstraction::raw_ptr"],[1542,"safe_abstraction::raw_ptr"],[1543,"core::option"],[1544,"alloc::boxed"],[1545,"log"],[1546,"vmsa::error"],[1547,"core::panic::panic_info"],[1548,"core::ffi"],[1549,"core::cmp"],[1550,"core::fmt"],[1551,"spin"],[1552,"alloc::sync"],[1553,"core::ops::function"],[1554,"alloc::vec"],[1555,"core::clone"],[1556,"core::default"],[1557,"core::fmt"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Call <code>rmm_exit</code> within <code>exception/vectors.s</code> and jumps to EL1.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Fault Status Code only for the ‘RecExitReason::Sync’ it…","","","","","","Handles ‘RET_TO_RMM’ cases from …","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","This function is called when an exception occurs from …","This function is called when an exception occurs from …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","DataPage is used to convey realm data from host to realm.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","A 4 KiB page mapped in the L3Table.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","The Level 0 Table","The Level 1 Table","The Level 2 Table","The Level 3 Table (Doesn’t have Subtable!)","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Generic Interrupt Controller Registers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","A 4 KiB page mapped in the L3Table.","A 1 GiB page mapped in the L1Table.","A 2 MiB page mapped in the L2Table.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","The Level 0 Table","The Level 1 Table","The Level 2 Table","The Level 3 Table (Doesn’t have Subtable!)","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Retrieves Page Table Entry (PA) from Intermediate Physical …","Retrieves Page Table Entry (PTE) from Intermediate …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Whether the host has completed emulation for an Emulatable …","Whether to inject a Synchronous External Abort (SEA) into …","Whether to trap WFE execution by the Realm. val 0: Trap is …","Whether to trap WFI execution by the Realm. val 0: Trap is …","The structure holds data passsed between the Host and the …","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,4,4,4,4,8,4,8,4,4,4,4,8,4,8,4,8,8,8,4,4,8,4,8,4,8,0,0,0,0,0,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,0,11,11,0,0,0,11,11,11,11,0,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,18,0,17,17,18,17,18,0,17,17,17,18,17,18,17,18,17,18,17,17,18,18,17,17,18,18,17,18,17,18,17,18,0,20,20,20,0,20,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,25,25,26,0,26,0,25,25,0,0,26,0,26,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,25,26,27,0,0,25,26,27,0,25,26,27,25,26,27,25,26,27,25,26,27,29,29,29,30,30,0,30,30,29,30,30,29,30,30,0,30,29,29,30,30,29,30,29,30,29,30,29,30,29,30,29,29,30,30,29,29,30,30,29,30,29,30,29,30,29,30,108,109,110,111,0,0,0,0,32,31,32,31,31,32,31,0,32,31,32,32,32,32,0,0,0,0,32,31,32,31,32,31,0,35,35,0,0,0,0,0,0,0,35,35,35,35,35,37,35,36,37,35,36,35,35,36,37,0,35,35,37,35,36,0,35,37,35,36,0,0,37,35,0,35,37,35,36,37,35,36,37,35,36,0,0,0,39,41,39,41,39,39,39,41,39,41,41,41,39,39,39,41,39,41,39,41,0,43,43,43,43,43,0,0,43,43,43,43,43,43,43,43,43,0,0,0,0,0,0,0,48,48,48,48,112,112,48,48,0,48,48,48,113,48,0,0,0,0,0,53,53,53,53,53,53,53,53,53,53,0,0,0,0,0,114,115,116,117,114,115,116,117,0,114,115,116,117,114,115,116,117,114,115,116,117,114,115,116,117,114,115,116,117,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,0,56,56,0,56,56,56,56,56,56,54,56,54,56,54,54,56,56,54,56,54,56,54,56,56,56,56,54,56,54,54,54,56,54,54,54,56,54,56,56,56,54,56,54,56,54,56,54,56,54,0,0,0,58,58,58,0,58,58,58,58,58,58,58,0,0,0,0,0,0,0,0,0,0,61,61,61,61,61,61,0,61,61,61,61,0,0,0,0,64,64,64,64,62,63,64,65,62,63,64,65,65,64,65,65,65,65,65,65,64,64,64,62,63,64,65,62,64,64,64,62,63,64,65,62,62,63,64,65,62,0,62,62,64,63,63,63,63,63,63,62,63,64,65,62,64,62,64,64,0,64,64,62,62,64,62,64,64,64,62,63,64,65,62,63,64,65,64,64,62,63,64,65,64,64,64,0,0,92,92,92,92,92,0,0,0,0,0,0,0,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,55,55,55,55,67,67,67,67,67,55,55,55,67,67,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,55,67,0,0,0,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,70,71,72,0,0,0,0,118,119,120,121,118,119,120,121,0,118,119,120,121,118,119,120,121,0,118,119,120,121,118,119,120,121,118,119,120,121,0,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,76,0,0,0,76,75,75,75,76,75,76,75,76,76,76,75,75,75,76,76,75,76,76,76,75,76,75,75,75,75,76,76,76,76,76,0,76,75,76,75,76,75,76,0,0,77,77,77,77,77,77,77,77,77,77,0,77,77,77,0,0,77,77,77,78,77,78,77,77,78,77,78,77,0,78,77,77,78,77,77,77,78,77,77,77,78,77,0,0,77,77,77,77,77,77,77,78,77,77,77,77,77,78,77,78,77,78,77,78,77,0,0,0,0,0,0,0,0,0,79,79,79,79,79,79,79,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,80,80,80,0,0,24,80,24,80,80,80,24,0,0,24,24,80,24,80,24,24,80,24,24,24,24,0,24,80,24,80,24,80,24,80,0,0,0,0,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,83,0,0,0,83,83,83,0,83,83,83,0,0,0,0,83,0,83,83,83,0,0,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,87,87,87,87,34,34,34,34,34,34,34,34,87,34,87,34,87,34,34,34,34,87,34,87,34,87,34,87,34,87,0,0,0,0,0,0,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,33,33,94,94,0,0,22,22,94,22,94,22,94,94,94,0,94,22,94,22,22,0,22,22,22,94,22,22,0,22,0,22,22,22,22,0,0,0,22,22,22,0,22,22,22,22,94,94,22,94,22,94,22,22,0,22,0,0,95,95,95,95,0,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,97,0,97,97,97,97,0,97,97,97,97,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,102,103,104,99,102,103,104,104,99,102,103,104,99,102,103,104,99,99,102,103,104,99,102,103,104,102,104,99,102,103,104,104,104,104,104,104,104,99,102,103,104,99,102,103,104,99,102,103,104,99,102,103,104,0,0,89,89,89,89,89,89,89,89,89,89,89,0,0,107,107,107,107,107,107,107,107,107,107,107,107,0,0,122,123,122,122,123,122,123,122,0,0,0,0,0,122,122,122,123,122,123,122,123,122,123,0,122,123,122,123,122,123,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]]],[[2,[1]]]],0,0,[1],[[],1],[[]],0,[[1,1]],[[1,[3,[1]]],[[2,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[4,4],[[]],[[4,4],5],[[4,6],7],[[8,6],7],[[]],[[]],[[]],[[]],[8,4],[4,8],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,[11,[[3,[1]]]],[[]],[[]],[11,11],[[]],[11,12],[[],11],[[11,13],[[2,[1]]]],[[11,14]],[[]],[[11,[3,[1]]]],[[11,[3,[1]]]],[[]],0,[12,11],0,[[11,1]],[11,[[3,[1]]]],0,0,0,[[]],[[],9],[[],9],[[],10],0,0,[[15,1,16]],[15],[[]],[[]],[[15,11]],[[]],[[]],[[],15],0,0,0,[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[17,6],7],[[18,6],7],[[]],[1,17],[1,18],[[]],[17,19],[[]],[[]],[18,19],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,[[20,1,21]],[[]],[[]],0,[[]],[[]],[[],20],0,[[],9],[[],9],[[],10],0,0,0,0,0,[[24,19],19],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[26,26],[27,27],[[]],[[]],[[]],[[25,6],7],[[26,6],7],[[27,6],7],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[29,29],[30,30],[[]],[[]],[[29,6],7],[[30,6],7],[28,29],[[]],[28,30],[[]],[[]],[29,19],[[]],[30,19],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[31,32],[[]],[[]],[24],[[]],[[]],0,0,0,0,[[33,1,23],[[9,[34]]]],[24],[24],[[33,1,23],[[9,[34]]]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[[]],[36,37],0,0,[[35,35],5],[[35,6],7],[[]],[[]],[[]],[1,1],0,[[]],[[]],[[]],[1,5],[1,5],[[],37],[38,35],[[39,38],[[9,[34]]]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[1,5],0,0,[[]],[[]],[[]],[[]],[39,40],[39,40],[[]],[[]],[[]],[[]],[41,[[9,[[42,[39]],34]]]],[[],41],[[39,38],[[9,[34]]]],[39,38],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,[43,[[3,[38]]]],[[]],[[]],[43,43],[[]],[1,[[47,[[0,[44,45,46]]]]]],[[[0,[44,45,46]],1],47],[[],43],[[]],[[]],[43,5],[[]],[[],9],[[],9],[[],10],[43,5],0,0,0,0,0,0,0,[[48,[50,[49]]],51],[[]],[[]],[[]],[[],51],[[],5],[[]],[[],48],[[],[[42,[48]]]],[[],9],[[],9],[[],10],[[[3,[38]]],51],[[48,[3,[38]]],51],[52],0,0,0,0,[[]],[[]],[53,53],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],10],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[54,1],[[47,[55]]]],[[]],[[]],[[]],[[]],[54],[[56,19],56],[56,56],[54,54],[[]],[[]],[[]],[[]],[56,19],[[56,19],19],[[56,19],19],[56,56],[1,1],[[]],[[]],[54,5],[54],[19,56],[[],54],[54,5],[54,19],[[56,19],56],[[54,55,19,5],[[9,[57]]]],[[56,19],56],[[56,19,19],56],[[56,19,19],56],[[54,55],[[9,[57]]]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,[[]],[[]],[[]],[[],19],[[],58],[[]],[[58,1,5],5],[[],9],[[],9],[[],10],[[58,1],5],[[33,1,23],[[9,[34]]]],[[],59],[60,59],0,0,0,0,0,0,0,[[]],[[]],[[]],[[1,1],[[9,[34]]]],[[]],[61,5],[[33,1,1],[[9,[34]]]],[[],9],[[],9],[[],10],[61,5],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],62],[[],63],[[],64],[[],65],0,0,0,0,[[62,6],7],[[63,6],7],[[64,6],7],[[65,6],7],0,[[]],[[]],[[]],[[]],[24],[[33,1,1],[[9,[1,34]]]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[24],0,[[],62],0,0,[[33,1,1,1],[[9,[34]]]],0,0,0,0,0,0,0,0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,[[],10],[[],10],[[],10],[[],10],0,0,0,0,0,[[]],[[],66],[[67,1],[[47,[55]]]],[[67,1],47],[[67,1,19],[[9,[34]]]],0,0,0,0,0,0,0,[[55,55],55],[[67,67],67],[[55,55]],[[67,67]],[55,19],[67,19],[55,1],[67,1],[[55,55],55],[[67,67],67],[[55,55],55],[[67,67],67],[[]],[[]],[[]],[[]],[55,55],[67,67],[[]],[[]],[[55,55],68],[[67,67],68],[[55,55],5],[[67,67],5],[[55,6],[[9,[69]]]],[[67,6],7],[[]],[1,55],[[],55],[[],55],[19,55],[[],67],[19,67],[[]],[1,67],[[],67],[[]],[55,1],[55,19],[67,1],[67,19],[[]],[[55,55],[[47,[68]]]],[[67,67],[[47,[68]]]],[[55,55],55],[[67,67],67],[[55,55]],[[67,67]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],55],[[],67],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[70,70],[71,71],[72,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],0,[[73,1],[[47,[55]]]],[[]],[[]],[73],[73,73],[[]],[[]],[1,1],[[]],[73,5],[73],[[],73],[73,5],[73,19],[[73,55,19,5],[[9,[57]]]],[[73,55],[[9,[57]]]],[[]],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[74,38],[74,38],[[]],[[]],[[]],[[]],[75],[[76,19],76],[76,76],[[]],[[38,74]],[[75,6],7],[[]],[[]],[76,19],[75,66],[[76,19],19],[[76,19],19],[76,76],[[]],[[]],[[75,67,1],[[47,[55]]]],[[75,67,1],47],[[75,67,1,19],[[9,[34]]]],[1,75],[19,76],[[76,19],76],[[76,19],76],[[76,19,19],76],[[76,19,19],76],0,[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[77,1],[[47,[55]]]],[[]],[[]],[[]],[[]],[[77,19],77],[78,78],[77,77],[[]],[[]],0,[[]],[1,77],[[]],[[78,1],[[47,[19]]]],[77,19],[[77,19],19],[[77,19],19],[[78,1],[[47,[19]]]],[77,77],[77,19],[[33,1,1,34],[[9,[34]]]],[[]],[[]],0,0,[77,5],[77,5],[[77,1],5],[77,5],[[77,1],5],[77,5],[[77,1,5],5],[78,1],[19,77],[[77,19],77],[[77,19],77],[[77,19,19],77],[[77,19,19],77],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[79,19],79],[79,79],[[]],[[]],[79,19],[[79,19],19],[[79,19],19],[79,79],[[]],[19,79],[[79,19],79],[[79,19],79],[[79,19,19],79],[[79,19,19],79],[[]],[[],9],[[],9],[[],10],0,[24],[24],[24],[[33,1,23],[[9,[34]]]],[[24,19]],0,0,0,0,0,[[]],[[]],[[]],[[]],[80,80],[[]],0,[33,[[9,[1,34]]]],[[],[[47,[24]]]],[24],[[24,6],7],[[80,6],7],[[]],[[]],[24],[[]],[[]],[24],[24,5],[[],[[82,[[81,[24]]]]]],0,[1,[[9,[34]]]],0,[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,[1,83],[[]],[83,1],0,[[]],[[83,19],5],[1,83],0,0,0,0,[[83,19]],[1,84],[[],9],[[],9],[[],10],0,0,0,[[]],[[]],[85,85],[[]],0,[[],85],[[]],[[]],[[12,1,1],85],0,[[]],[[],9],[[],9],[[],10],[[12,13,86]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[34,6],7],[[87,6],7],[88,34],[[]],[89,34],[57,34],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[1,1],[15],[1,5],0,0,[15],0,[[33,1],5],0,[[]],[[]],[[33,6],7],[[]],[33,38],[33,1],[33],[[33,90,1,1,91,[82,[[93,[[50,[92]]]]]]]],[[]],[33,1],0,[33,1],[33,1],[33,91],[33,[[82,[[93,[[50,[92]]]]]]]],[15],[[33,38]],0,0,[[],9],[[],9],[[],10],0,0,0,0,0,[22,[[3,[38]]]],[22,94],[[]],[[]],[[]],[[]],[94,94],[[]],[[94,94],5],0,[[94,6],7],[[22,6],7],[[]],[[]],[22,80],0,[22,5],[[22,19]],[[22,1,1,19],[[9,[34]]]],[[]],[[]],[22,[[9,[1,34]]]],0,[22,[[9,[1,34]]]],0,[22,[[9,[1,34]]]],[22,19],[22,19],[22,38],0,[[],[[9,[[2,[1]],34]]]],[[33,1,1],[[9,[34]]]],[22,5],[[22,[3,[38]]]],[[22,94]],0,[[22,5]],[[22,19,19,19,38]],[[22,80]],[[22,19]],[[]],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[22,1],0,[22,19],0,[15],0,0,0,0,0,[[]],[[]],[[95,19],95],[95,95],[[]],[19,95],[[]],[95,19],[[95,19],19],[[95,19],19],[95,95],[95,1],[[]],[19,95],[[95,19],95],[[95,19],95],[[95,19,19],95],[[95,19,19],95],[[]],[[],9],[[],9],[[],10],[19,5],0,0,[[]],[[]],[96,96],[[]],[[],96],0,[[96,6],7],[[]],0,[[]],[96,5],0,0,0,[[]],[[],9],[[],9],[[],10],[[96,1,1,1],[[9,[34]]]],[96,5],0,0,0,0,0,0,[[]],[[]],[23,23],[[]],[[],23],[23,19],[23,19],[23,[[2,[19]]]],[[23,1],[[9,[19,34]]]],[23,[[2,[19]]]],[[23,6],7],[[]],[[]],[23,5],[[23,19]],[[23,19]],[[23,19]],[[23,19]],[[23,19]],[[23,38]],[[23,19]],[[23,19]],[[23,[3,[19]],1]],[[23,19]],[[23,19]],[[23,1,19],[[9,[34]]]],[[23,19]],[[23,90]],[[23,19,19,38]],[[]],[[],9],[[],9],[[],10],[23,[[9,[34]]]],[23,5],[22],[33,[[9,[19,34]]]],0,0,0,[[1,1],5],[1,1],[15],[[1,1],[[9,[34]]]],0,0,0,0,0,[15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20],[1,84],0,[[]],[[]],0,[[97,[3,[38]],[3,[0]],38],[[98,[38]]]],[[],97],[[97,6],7],[[]],[[1,[3,[38]],[3,[0]],38],1],[[]],[[[3,[38]],[3,[38]]],97],[[],9],[[],9],[[],10],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[99,99],[[[102,[[0,[100,101]]]]],[[102,[[0,[100,101]]]]]],[[[103,[100]]],[[103,[100]]]],[104,104],[[]],[[]],[[]],[[]],[[],99],[[99,6],7],[[[102,[[0,[105,101]]]],6],7],[[[103,[105]],6],7],[[104,6],7],[[]],[[]],[[]],[[]],[[[3,[[0,[46,101]]]]],[[102,[[0,[46,101]]]]]],[[[3,[38]],[3,[38]],[3,[0]],106,[3,[38]],106],104],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[],10],[[],10],[[12,14]],0,0,0,0,[[]],[[]],[[89,6],7],[[]],[[]],[[],9],[[],9],[[],10],0,0,[[]],[[]],[[107,6],7],[[]],[107,90],[[]],[107,5],[[107,1,19],[[9,[34]]]],[[],9],[[],9],[[],10],[107,5],[[33,1,13],[[9,[89]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[20],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[[33,1,1,1],[[9,[34]]]],[[33,1,1],[[9,[34]]]],[[33,1],[[9,[1,34]]]],[[33,1,1,1],[[9,[34]]]],[[33,1,1],[[9,[19,34]]]],[[33,1,1],[[9,[34]]]],[[33,1,1],[[9,[34]]]],[[33,1,1],[[9,[34]]]],[[33,1,1,1],[[9,[34]]]],[[33,1,1],[[9,[[2,[1]],34]]]],[[33,1,1],[[9,[34]]]]],"c":[],"p":[[15,"usize"],[15,"array"],[15,"slice"],[4,"ErrorKind",53],[15,"bool"],[3,"Formatter",1535],[6,"Result",1535],[3,"Error",53],[4,"Result",1536],[3,"TypeId",1537],[3,"Context",81],[6,"Command",81],[8,"Fn",1538],[8,"FnMut",1538],[3,"Mainloop",113],[6,"Handler",113],[4,"RecExitReason",129],[4,"ExitSyncType",129],[15,"u64"],[3,"RsiHandle",161],[6,"Handler",161],[3,"Rec",1194],[3,"Run",1300],[3,"VCPU",1005],[4,"Source",183],[4,"Kind",183],[3,"Info",183],[15,"u32"],[4,"Fault",232],[4,"Syndrome",232],[3,"GIC_FEATURES",282],[3,"GicFeatures",282],[3,"Rd",1168],[4,"Error",1130],[3,"GranuleState",311],[3,"GRANULE_STATUS_TABLE",311],[3,"GranuleStatusTable",311],[15,"u8"],[3,"Granule",362],[8,"Content",1539],[3,"Entry",362],[6,"SpinlockGuard",1540],[3,"DataPage",384],[8,"SafetyChecked",1541],[8,"SafetyAssured",1541],[8,"Copy",1542],[4,"Option",1543],[3,"Stdout",401],[8,"ConsoleWriter",401],[3,"Box",1544],[6,"Result",401],[4,"LevelFilter",1545],[4,"BasePageSize",426],[3,"Entry",485],[3,"PhysAddr",678],[3,"PTDesc",485],[4,"Error",1546],[3,"PageTable",540],[15,"never"],[3,"PanicInfo",1547],[3,"RealmConfig",563],[3,"Context",575],[3,"GICRegister",575],[3,"SystemRegister",575],[3,"TimerRegister",575],[4,"c_void",1548],[3,"GuestPhysAddr",678],[4,"Ordering",1549],[3,"Error",1535],[4,"BasePageSize",738],[4,"LargePageSize",738],[4,"HugePageSize",738],[3,"Entry",805],[3,"Layout",1550],[3,"Stage2Translation",845],[3,"TLBI_OP",845],[3,"S2TTE",892],[3,"RttPage",892],[3,"RawPTE",966],[4,"State",1005],[6,"Mutex",1551],[3,"Arc",1552],[3,"MapProt",1040],[15,"str"],[3,"Constraint",1113],[8,"FnOnce",1538],[4,"InternalError",1130],[4,"Error",1541],[4,"Error",1466],[15,"u16"],[15,"isize"],[8,"IPATranslation",666],[3,"Mutex",1553],[4,"RmmRecAttestState",1194],[3,"MPIDR",1250],[3,"Params",1278],[3,"Attestation",1379],[3,"Vec",1554],[3,"MeasurementEntry",1393],[8,"Clone",1555],[8,"Default",1556],[3,"Data",1393],[3,"Claim",1393],[3,"RealmClaims",1393],[8,"Debug",1535],[3,"String",1557],[3,"HostCall",1478],[13,"AddressSize",278],[13,"Translation",278],[13,"AccessFlag",278],[13,"Permission",278],[8,"Device",401],[8,"Write",401],[4,"L0Table",437],[4,"L1Table",437],[4,"L2Table",437],[4,"L3Table",437],[4,"L0Table",771],[4,"L1Table",771],[4,"L2Table",771],[4,"L3Table",771],[3,"SMC32",1494],[3,"SMC64",1494]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
